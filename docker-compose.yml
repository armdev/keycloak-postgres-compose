services:
  postgresql:
    image: docker.io/bitnami/postgresql:16
    container_name: postgresql
    ports:
      - '5432'
    volumes:
      - 'pg_data:/bitnami/postgresql'
      - ./configs/postgresql.conf:/opt/bitnami/postgresql/conf/postgresql.conf:rw     
    environment:     
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=PkAX16o639vwj5u
      - POSTGRESQL_DATABASE=keycloak
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - postgres_network

  keycloak:
    image: quay.io/keycloak/keycloak:26.0
    command: 'start-dev --import-realm'
    container_name: keycloak
    volumes:
      - ./realm-config:/opt/keycloak/data/import
      - ./realm-config/keycloak-health-check.sh:/opt/keycloak/health-check.sh
    environment:
      - KC_DB=dev-file
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB_URL=jdbc:postgresql://postgresql:5432/keycloak
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=PkAX16o639vwj5u
      - KC_HOSTNAME=localhost
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HTTP_ENABLED=true
      - KC_FEATURES=scripts
      - KC_HTTP_PORT=9080
      - KC_HTTPS_PORT=9443
      - KC_HEALTH_ENABLED=true
      - KC_HTTP_MANAGEMENT_PORT=9990   
      - KC_METRICS_ENABLED=true     
      - KC_DB=postgres
    ports:
      - 9080:9080
      - 9443:9443
    links:
     - postgresql 
    healthcheck:
      test: 'bash /opt/keycloak/health-check.sh'
      interval: 5s
      timeout: 5s
      retries: 40
      start_period: 10s
    labels:
      org.springframework.boot.ignore: true 
    networks:
      - postgres_network
      
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    ports:
      - "127.0.0.1:5050:80"
    depends_on:
      - postgresql  
    links:
      - postgresql  
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - ~/volumes/data/pgbackup/_data/pgadmin:/var/lib/pgadmin
    networks:
      - postgres_network

volumes:
  pg_data:
    driver: local

    
networks:
  postgres_network:
    driver: bridge

